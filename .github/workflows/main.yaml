name: CI run

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
      
    timeout-minutes: 500
    
    env:
      cuda_arch: "35;75"    

    steps:
    - uses: actions/checkout@v2

#     - name: update packages
#       run: |
#         sudo apt update
#         sudo apt-get upgrade
    
    - name: Install CUDA
      env:
        cuda: ${{ matrix.cuda }}
      run: |
        source ./scripts/actions/install_cuda_ubuntu.sh
        if [[ $? -eq 0 ]]; then
          # Set paths for subsequent steps, using ${CUDA_PATH}
          echo "Adding CUDA to CUDA_PATH, PATH and LD_LIBRARY_PATH"
          echo "::set-env name=CUDA_PATH::${CUDA_PATH}"
          echo "::add-path::${CUDA_PATH}/bin"
          echo "::set-env name=LD_LIBRARY_PATH::${CUDA_PATH}/lib:${LD_LIBRARY_PATH}"
        fi
      shell: bash
    
    # set up gcc
    - name: install gcc
      run: sudo apt-get install gcc
      
    # set up cmake
    - name: install cmake
      run: sudo apt-get install cmake
      
    # set up build-essential
    - name: install build-essential
      run: sudo apt-get install build-essential
      
    # set up libfftw3-dev
    - name: install libfftw3-dev
      run: sudo apt-get install libfftw3-dev
    
    # set up gromacs
    - name: install gromacs
      run: sudo apt-get install gromacs
      
    # Runs the main script script
    - name: Run script
      run: sh ./config.sh
      
    - name: Commit files
      id: commit
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "github-actions"
        git add --all
        if [ -z "$(git status --porcelain)" ]; then
           echo "::set-output name=push::false"
        else
           git commit -m "Add changes"
           echo "::set-output name=push::true"
        fi
      shell: bash
    - name: Push changes
      if: steps.commit.outputs.push == 'true'
      uses: ad-m/github-push-action@master
      with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
      
    
      
      
      
      
            
